{
	"info": {
		"_postman_id": "80a1fc79-aaf9-4a79-81a8-e1ca9b71f434",
		"name": "3_FFME2-16_Company_admin_login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a1206f78-066c-496f-b2ef-945f78317d3f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg4OTUsImlhdCI6MTYwMTA2NTI5NSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.BKoJF3hUWOtX4lJBm8dR1UHSz6lgVrOfsQ7kGH7K-5w\",\r",
									"            \"message\": \"Successfully logged in.\",\r",
									"            \"status\": \"success\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"auth_token\",\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"auth_token\": {\r",
									"            \"$id\": \"#/properties/auth_token\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The auth_token schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjg4OTUsImlhdCI6MTYwMTA2NTI5NSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.BKoJF3hUWOtX4lJBm8dR1UHSz6lgVrOfsQ7kGH7K-5w\"\r",
									"            ]\r",
									"        },\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Successfully logged in.\"\r",
									"            ]\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"success\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "FFME2-16.1 Company_admin_login_without_email",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65710dff-f9a1-410f-b27a-a173bf0bfd51",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"1asdf234\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"1asdf234\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-16.2 Company_admin_login_without_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebf31860-97f1-4b86-8d06-91a3c00c091d",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"password must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"fuadahmed@yahoo.com\",\r\n    \"password\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"fuadahmed@yahoo.com\",\r\n    \"password\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				},
				{
					"name": "FFME2-16.3 Company_admin_login_without_email_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6978dafb-f85e-440e-93cb-6cac9a0224aa",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody)\r",
									"\r",
									"var schema= {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"message\": [\r",
									"                \"email must be non-empty\",\r",
									"                \"password must be non-empty\"\r",
									"            ],\r",
									"            \"status\": \"failed\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"status\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"$id\": \"#/properties/message\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The message schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    \"email must be non-empty\",\r",
									"                    \"password must be non-empty\"\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/message/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",\r",
									"                        \"type\": \"string\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": \"\",\r",
									"                        \"examples\": [\r",
									"                            \"email must be non-empty\",\r",
									"                            \"password must be non-empty\"\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"failed\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test('Schema Validation', function() {\r",
									"  var result=tv4.validateResult(pm.response.json(), schema);\r",
									"    if(!result.valid){\r",
									"        console.log(result);\r",
									"    }\r",
									"    pm.expect(result.valid).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}"
						},
						"url": {
							"raw": "167.99.73.130:30287/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"167",
								"99",
								"73",
								"130"
							],
							"port": "30287",
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "BRD: Dashboard User (Techserve4u/Company admin) login in admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: Testing the request by leaving \"email and password\" empty.\r\n\r\nTest Data: \r\n{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}\r\nExpected Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\nActual Result: \r\n\r\n{\r\n    \"message\": [\r\n        \"email must be non-empty\",\r\n        \"password must be non-empty\"\r\n    ],\r\n    \"status\": \"failed\"\r\n}\r\n\r\nStatus code : 403 FORBIDDEN\r\nTest Status : Passed\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}